# Which country had the highest deaths per capita in 2014
df %>%
filter(year == '2014') %>%
arrange(desc(death_rate)) %>%
head(1)
# Which country had the lowest deaths per capita in 1995
df %>%
filter(year == '1995') %>%
arrange(death_rate) %>%
head(1)
# Which year had the highest average number of deaths per capita across ALL South American conutries?
df %>%
group_by(year) %>%
summarize(mean_death = mean(death_rate)) %>%
arrange(desc(mean_death)) %>%
head(3)
# Chile
df_chile <- df %>%
filter(location == 'Chile')
m_chile <- lm(death_rate ~ year, data = df_chile)
summary(m_chile)
# Colombia
df_colombia <- df %>%
filter(location == 'Colombia')
m_colombia <- lm(death_rate ~ year, data = df_colombia)
summary(m_colombia)
# Uruguay
df_uruguay <- df %>%
filter(location == 'Uruguay')
m_uruguay <- lm(death_rate ~ year, data = df_uruguay)
summary(m_uruguay)
# Bolivia
df_bolivia <- df %>%
filter(location == 'Bolivia')
m_bolivia <- lm(death_rate ~ year, data = df_bolivia)
summary(m_bolivia)
# Peru
df_peru <- df %>%
filter(location == 'Peru')
m_peru <- lm(death_rate ~ year, data = df_peru)
summary(m_peru)
# Guyana
df_guyana <- df %>%
filter(location == 'Guyana')
m_guyana <- lm(death_rate ~ year, data = df_guyana)
summary(m_guyana)
# Venezuela
df_venezuela <- df %>%
filter(location == 'Venezuela')
m_venezuela <- lm(death_rate ~ year, data = df_venezuela)
summary(m_venezuela)
# Argentina
df_argentina <- df %>%
filter(location == 'Argentina')
m_argentina <- lm(death_rate ~ year, data = df_argentina)
summary(m_argentina)
# Brazil
df_brazil <- df %>%
filter(location == 'Brazil')
m_brazil <- lm(death_rate ~ year, data = df_brazil)
summary(m_brazil)
# Ecuador
df_ecuador <- df %>%
filter(location == 'Ecuador')
m_ecuador <- lm(death_rate ~ year, data = df_ecuador)
summary(m_ecuador)
# Suriname
df_suriname <- df %>%
filter(location == 'Suriname')
m_suriname <- lm(death_rate ~ year, data = df_suriname)
summary(m_suriname)
# Paraguay
df_paraguay <- df %>%
filter(location == 'Paraguay')
m_paraguay <- lm(death_rate ~ year, data = df_paraguay)
summary(m_paraguay)
# Add this to your scatter plot to create your linear regression line and facet by location
ggplot(df, aes(year, death_rate)) +
geom_point() +
geom_smooth(method='lm') + facet_wrap(~location)
df <- read.csv("diabetes.csv")
# Add this to your scatter plot to create a logistic regression line
+ stat_smooth(method="glm", method.args = c(family=binomial))
cat("yoyoyo")
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values, demo_income[i, "X2021"])
}
df <- data.frame(statenames, income_values)
cat("yoyoyo")
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values, demo_income[i, "X2021"])
}
df <- data.frame(statenames, income_values_2021)
cat("yoyoyo")
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values, demo_income[i, "X2021"])
}
df <- data.frame(statenames, income_values_2021)
df
cat("yoyoyo")
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values, demo_income[i, "X2021"])
demo_income[i, "X2021"]
}
df <- data.frame(statenames, income_values_2021)
df
cat("yoyoyo")
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values, demo_income[i, "X2021"])
cat(demo_income[i, "X2021"])
}
df <- data.frame(statenames, income_values_2021)
df
cat("yoyoyo")
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values, demo_income[i, "X2021"])
cat(demo_income[i, "X2021"], "\n")
}
df <- data.frame(statenames, income_values_2021)
df
cat("yoyoyo")
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
cat(demo_income[i, "X2021"], "\n")
}
df <- data.frame(statenames, income_values_2021)
df
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
cat("yoyoyo")
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
income_values_2022 <- c()
income_values_2023 <- c()
income_values_2024 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
income_values_2022 <- c(income_values_2022, demo_income[i, "X2022"])
income_values_2023 <- c(income_values_2023, demo_income[i, "X2023"])
income_values_2024 <- c(income_values_2024, demo_income[i, "X2024"])
cat(demo_income[i, "X2021"], "\n")
}
df <- data.frame(statenames, income_values_2021,income_values_2022, income_values_2023, income_values_2024)
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
income_values_2022 <- c()
income_values_2023 <- c()
income_values_2024 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
income_values_2022 <- c(income_values_2022, demo_income[i, "X2022"])
income_values_2023 <- c(income_values_2023, demo_income[i, "X2023"])
income_values_2024 <- c(income_values_2024, demo_income[i, "X2024"])
cat(demo_income[i, "X2021"], "\n")
}
df <- data.frame(statenames, income_values_2021,income_values_2022, income_values_2023, income_values_2024)
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
income_values_2022 <- c()
income_values_2023 <- c()
income_values_2024 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
income_values_2022 <- c(income_values_2022, demo_income[i, "X2022"])
income_values_2023 <- c(income_values_2023, demo_income[i, "X2023"])
income_values_2024 <- c(income_values_2024, demo_income[i, "X2024"])
}
df <- data.frame(statenames, income_values_2021,income_values_2022, income_values_2023, income_values_2024)
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
income_values_2022 <- c()
income_values_2023 <- c()
income_values_2024 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
income_values_2022 <- c(income_values_2022, demo_income[i, "X2022"])
income_values_2023 <- c(income_values_2023, demo_income[i, "X2023"])
income_values_2024 <- c(income_values_2024, demo_income[i, "X2024"])
}
income_values_2021
df <- data.frame(statenames, income_values_2021,income_values_2022, income_values_2023, income_values_2024)
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
income_values_2022 <- c()
income_values_2023 <- c()
income_values_2024 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
income_values_2022 <- c(income_values_2022, demo_income[i, "X2022"])
income_values_2023 <- c(income_values_2023, demo_income[i, "X2023"])
income_values_2024 <- c(income_values_2024, demo_income[i, "X2024"])
}
income_values_2022
df <- data.frame(statenames, income_values_2021,income_values_2022, income_values_2023, income_values_2024)
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
income_values_2022 <- c()
income_values_2023 <- c()
income_values_2024 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
income_values_2022 <- c(income_values_2022, demo_income[i, "X2022"])
income_values_2023 <- c(income_values_2023, demo_income[i, "X2023"])
income_values_2024 <- c(income_values_2024, demo_income[i, "X2024"])
}
income_values_2023
df <- data.frame(statenames, income_values_2021,income_values_2022, income_values_2023, income_values_2024)
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2021 <- c()
income_values_2022 <- c()
income_values_2023 <- c()
income_values_2024 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
income_values_2022 <- c(income_values_2022, demo_income[i, "X2022"])
income_values_2023 <- c(income_values_2023, demo_income[i, "X2023"])
income_values_2024 <- c(income_values_2024, demo_income[i, "X2024"])
}
income_values_2024
df <- data.frame(statenames, income_values_2021,income_values_2022, income_values_2023, income_values_2024)
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2020 <- c()
income_values_2021 <- c()
income_values_2022 <- c()
income_values_2023 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2020 <- c(income_values_2020, demo_income[i, "X2020"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
income_values_2022 <- c(income_values_2022, demo_income[i, "X2022"])
income_values_2023 <- c(income_values_2023, demo_income[i, "X2023"])
}
df <- data.frame(statenames, income_values_2021,income_values_2022, income_values_2023, income_values_2024)
sudors <- read.csv("sudors-data.csv")
demo_start <- read.csv("SASUMMARY/SASUMMARY__ALL_AREAS_1998_2023.csv")
demo_income <- demo_start %>%
filter(LineCode == 5) %>%
filter(!is.na(Region))
demo_disposable <- demo_start %>%
filter(LineCode == 7) %>%
filter(!is.na(Region))
# Want a data frame where each column represents a rate, and each row represents a year
# for each year column
# add state name to statename vector and number to income vector
statenames <- c()
income_values_2020 <- c()
income_values_2021 <- c()
income_values_2022 <- c()
income_values_2023 <- c()
for (i in 1:nrow(demo_income)) {
statenames <- c(statenames, demo_income[i, "GeoName"])
income_values_2020 <- c(income_values_2020, demo_income[i, "X2020"])
income_values_2021 <- c(income_values_2021, demo_income[i, "X2021"])
income_values_2022 <- c(income_values_2022, demo_income[i, "X2022"])
income_values_2023 <- c(income_values_2023, demo_income[i, "X2023"])
}
df <- data.frame(statenames, income_values_2020, income_values_2021,income_values_2022, income_values_2023)
df
oregon <- sudors %>%
filter(Jurisdiction == "Oregon") %>%
filter(year == "2020")
washington <- sudors %>%
filter(Jurisdiction == "Washington") %>%
filter(year == "2020")
test <- t.test(oregon$alldrug_deaths, seattle$alldrug_deaths, alternative = 'greater')
oregon <- sudors %>%
filter(Jurisdiction == "Oregon") %>%
filter(year == "2020")
washington <- sudors %>%
filter(Jurisdiction == "Washington") %>%
filter(year == "2020")
test <- t.test(oregon$alldrug_deaths, washington$alldrug_deaths, alternative = 'greater')
View(washington)
View(oregon)
oregon <- sudors %>%
filter(Jurisdiction == "Oregon") %>%
filter(year == "2020")
washington <- sudors %>%
filter(Jurisdiction == "Washington") %>%
filter(year == "2020")
test <- t.test(oregon$alldrug_deaths, washington$alldrug_deaths, alternative = 'greater')
oregon <- sudors %>%
filter(Jurisdiction == "Oregon") %>%
filter(year == "2020")
washington <- sudors %>%
filter(Jurisdiction == "Alaska") %>%
filter(year == "2020")
test <- t.test(oregon$alldrug_deaths, washington$alldrug_deaths, alternative = 'greater')
View(washington)
oregon <- sudors %>%
filter(Jurisdiction == "Oregon" | Jurisdiction == "Alaska" | Jurisdiction == "California") %>%
filter(year == "2020")
washington <- sudors %>%
filter(Jurisdiction == "Arizonia" | Jurisdiction == "Colorado" | Jurisdiction == "Connecticut") %>%
filter(year == "2020")
test <- t.test(oregon$alldrug_deaths, washington$alldrug_deaths, alternative = 'greater')
oregon <- sudors %>%
filter(Jurisdiction == "Oregon" | Jurisdiction == "Alaska" | Jurisdiction == "California") %>%
filter(year == "2020")
washington <- sudors %>%
filter(Jurisdiction == "Arizonia" | Jurisdiction == "Colorado" | Jurisdiction == "Connecticut") %>%
filter(year == "2020")
test <- t.test(oregon$alldrug_deaths, washington$alldrug_deaths, alternative = 'greater')
test
oregon <- sudors %>%
filter(Jurisdiction == "Oregon" | Jurisdiction == "Arizonia" | Jurisdiction == "California") %>%
filter(year == "2020")
washington <- sudors %>%
filter(Jurisdiction == "Arizonia" | Jurisdiction == "Arkansas" | Jurisdiction == "Connecticut") %>%
filter(year == "2020")
test <- t.test(oregon$alldrug_deaths, washington$alldrug_deaths, alternative = 'greater')
oregon <- sudors %>%
filter(Jurisdiction == "Oregon" | Jurisdiction == "Arizonia" | Jurisdiction == "California") %>%
filter(year == "2020")
washington <- sudors %>%
filter(Jurisdiction == "Arizonia" | Jurisdiction == "Iowa" | Jurisdiction == "Connecticut") %>%
filter(year == "2020")
test <- t.test(oregon$alldrug_deaths, washington$alldrug_deaths, alternative = 'greater')
View(oregon)
View(washington)
